{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Button","react__WEBPACK_IMPORTED_MODULE_7___default","onClick","this","props","value","Component","Layout","_this","Object","_Users_rishabhverma_Documents_GitHub_react_calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_rishabhverma_Documents_GitHub_react_calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_rishabhverma_Documents_GitHub_react_calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","componentDidUpdate","prevProps","prevState","console","log","display","setState","substr","state","lastPressed","baseState","handleClick","bind","_Users_rishabhverma_Documents_GitHub_react_calc_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__","e","clickedElement","target","innerHTML","operators","finalResult","eval","SyntaxError","result","_Users_rishabhverma_Documents_GitHub_react_calc_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","keys","className"],"mappings":"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","file":"static/js/main.4de64702.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Button extends Component {\n    render() {\n        return <button onClick={this.props.onClick}>{this.props.value}</button>;\n    }\n}\n\nclass Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: \"0\",\n            lastPressed: \"\"\n        };\n        this.baseState = this.state\n        this.handleClick = this.handleClick.bind(this);\n        // this.resetDisplay = this.resetDisplay.bind(this);\n    }\n    resetDisplay() {\n        this.setState(this.baseState)\n        // debugger\n    }\n    // componentDidUpdate(prevProps, prevState) {\n    //     console.log(\"Updated\");\n    // }\n    componentDidUpdate = (prevProps, prevState) => {\n        // let width = ReactDOM.findDOMNode(this).parentNode.offsetWidth\n        // if (prevState && prevState.width !== width) {\n            // this.setState({ width })\n        // }\n        console.log(prevState.display[1])\n        if(prevState && prevState.display[0]===\"0\"){\n            console.log(\"hh\")\n            this.setState({\n                display: prevState.display.substr(1)\n            })\n        }\n        // if(prevState && prevState.lastPressed===\"=\"){\n        //     this.setState({\n        //         display: prevState.display\n        //     })\n        // }\n    }\n    handleClick(e) {\n        const clickedElement = e.target.innerHTML;\n        // console.log(this.state);\n        const operators = [\"+\", \"-\", \"*\", \"/\"]\n        // if(this.state.display === \"0\"){\n        //     debugger\n        //     this.setState({\n        //         display: \"\"\n        //     })\n        // }\n        // if(this.state.lastPressed === \"=\" && !operators.includes(clickedElement)) {\n        //     // debugger\n        //     // let clearedResult = \" \"\n        //     // this.setState({\n        //     //     display: \"\"\n        //     // })\n        //     this.resetDisplay()\n        //     console.log(\"Hahhahaha\")\n        // }\n        switch (clickedElement) {\n            \n            case \"C\":\n                // debugger\n                this.setState({\n                    display: \"00\",\n                    lastPressed: clickedElement\n                })\n            break\n            case \"+/-\":\n                this.setState(state=>({\n                    display: -1 * state.display,\n                    lastPressed: clickedElement\n                }))\n            break\n            case \"=\":\n                try {\n                    \n                    let finalResult = eval(this.state.display)\n                    this.setState({\n                        display: finalResult,\n                        lastPressed: clickedElement\n                    })\n                } catch (e) {\n                    if (e instanceof SyntaxError) {\n                        this.setState({\n                            display: \"00\",\n                            lastPressed: \"\"\n                        })\n                    }\n                }\n                \n            break\n            default:\n                // if(this.state.display[0]===\"0\") {\n                //     // debugger\n                //     // const ff = this.state.display.substr(1)\n                //     // this.setState({\n                //     //     display: ff,\n                //     //     lastPressed: clickedElement\n                //     // })\n                //     this.setState((prevState, props) => {\n                //         return {display: prevState.display.substr(1) };\n                //     })\n                // }\n                let result = \"\"\n                result = this.state.display + clickedElement\n                // console.log(result)\n                this.setState({\n                    display: result,\n                    lastPressed: clickedElement\n                })\n                // console.log(\"default\")\n            break\n        }\n    }\n    render() {\n        let numArray = [...Array(10).keys()];\n\n        // for(let i of numArray ) {\n        // <Button value = \"1\"/>\n        // }\n        return (\n            // for(let i of numArray ) {\n            <div className=\"calc-app\">\n                <div className=\"calc-app-display\">{this.state.display}</div>\n\n                <div className=\"row\">\n                    <Button value=\"C\" onClick={this.handleClick} />\n                    <Button value=\"+/-\" onClick={this.handleClick} />\n                    <Button value=\"%\" onClick={this.handleClick} />\n                    <Button value=\"/\" onClick={this.handleClick} />\n                </div>\n                <div className=\"row\">\n                    <Button value=\"7\" onClick={this.handleClick} />\n                    <Button value=\"8\" onClick={this.handleClick} />\n                    <Button value=\"9\" onClick={this.handleClick} />\n                    <Button value=\"*\" onClick={this.handleClick} />\n                </div>\n                <div className=\"row\">\n                    <Button value=\"4\" onClick={this.handleClick} />\n                    <Button value=\"5\" onClick={this.handleClick} />\n                    <Button value=\"6\" onClick={this.handleClick} />\n                    <Button value=\"-\" onClick={this.handleClick} />\n                </div>\n                <div className=\"row\">\n                    <Button value=\"1\" onClick={this.handleClick} />\n                    <Button value=\"2\" onClick={this.handleClick} />\n                    <Button value=\"3\" onClick={this.handleClick} />\n                    <Button value=\"+\" onClick={this.handleClick} />\n                </div>\n                <div className=\"row\">\n                    <Button value=\"0\" onClick={this.handleClick} />\n                    <Button value=\".\" onClick={this.handleClick} />\n                    <Button value=\"=\" onClick={this.handleClick} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            // <div className=\"App\">\n            //     <header className=\"App-header\">\n            //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            //         <p>\n            //             Edit <code>src/App.js</code> and save to reload.\n            //         </p>\n            //         <a\n            //             className=\"App-link\"\n            //             href=\"https://reactjs.org\"\n            //             target=\"_blank\"\n            //             rel=\"noopener noreferrer\"\n            //         >\n            //             Learn React\n            //         </a>\n            //     </header>\n            // </div>\n            <Layout />\n        );\n    }\n}\n\nexport default App;\n"],"sourceRoot":""}